package com.qa.ZOmdbTest;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

import org.openqa.selenium.WebDriver;

import com.qa.CucumberTests.CucumConstants;
import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;

import cucumber.api.java.Before;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import io.restassured.http.ContentType;

public class ZomdbTests {

	
	public static ExtentReports report;
	public ExtentTest test;
	
	@Before
	public void setup() {
		test = report.startTest("H");
		
	}
	


		@Given("^a film exists with the Title Guardians of the Galaxy Two$")
		public void a_film_exists_with_the_Title_Guardians_of_the_Galaxy_Two(){
			given().
			content(ContentType.JSON)
			.when()
			.get("http://www.omdbapi.com/?apikey=7e871fdf&t=Guardians of the Galaxy Vol. 2")
			.then().body("Title", equalTo("Guardians of the Galaxy Vol. 2"));
		    
		}

		@When("^a user retrieves the film by the title Guardians of the Galaxy Two$")
		public void a_user_retrieves_the_film_by_the_title_Guardians_of_the_Galaxy_Two() {
		    // Write code here that turns the phrase above into concrete actions
		    
		}

		@Then("^the status code reads (\\d+)$")
		public void the_status_code_reads(int arg1)  {
		    // Write code here that turns the phrase above into concrete actions
		  
		}

		@Given("^a film exists with the Title IT$")
		public void a_film_exists_with_the_Title_IT() {
		    // Write code here that turns the phrase above into concrete actions
		   
		}

		@When("^a user retrieves the film by the title IT$")
		public void a_user_retrieves_the_film_by_the_title_IT() {
		    // Write code here that turns the phrase above into concrete actions
		    
		}

		@Then("^the Rated Field is equal to R$")
		public void the_Rated_Field_is_equal_to_R() {
		    // Write code here that turns the phrase above into concrete actions
		   ;
		}

}